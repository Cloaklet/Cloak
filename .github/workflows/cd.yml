name: CD

on:
  push:
    branches: [ "!*" ]
    tags: [ "*" ]

jobs:
  create-github-release:
    name: "Create Github Release"
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

  build:
    name: "Build app"
    needs: create-github-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install dependencies for Ubuntu
        run: sudo apt update && sudo apt install -y libappindicator3-dev gcc libgtk-3-dev libxapp-dev
        if: matrix.os == 'ubuntu-latest'

      - name: Test
        run: go test -v ./...

      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "12"

      - name: Install Nodejs dependencies
        run: cd frontend && npm ci && cd ..

      - name: Build app bundle
        run: go run build.go build

      - name: Get Tag Version
        id: get_tag_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Upload macOS app bundle
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-github-release.outputs.upload_url }}
          asset_path: ./Cloak.app.zip
          asset_name: Cloak.app.zip
          asset_content_type: application/zip
        if: matrix.os == 'macOS-latest'

      - name: Upload Linux AppImage bundle
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-github-release.outputs.upload_url }}
          asset_path: ./Cloak-${{ steps.get_tag_version.outputs.VERSION }}-x86_64.AppImage
          asset_name: Cloak-${{ steps.get_tag_version.outputs.VERSION }}-x86_64.AppImage
          asset_content_type: application/octet-stream
        if: matrix.os == 'ubuntu-latest'
